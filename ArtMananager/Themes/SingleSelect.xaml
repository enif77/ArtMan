<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:Local="clr-namespace:ArtMananager.Forms.Controls"
                    xmlns:Converters="clr-namespace:ArtMananager.Forms.Converters">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <Converters:ReverseBoolConverter x:Key="ReverseBoolConverter"></Converters:ReverseBoolConverter>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <SolidColorBrush x:Key="ChangedColorBrush" Color="#ffc" />

    <SolidColorBrush x:Key="Foreground" Color="Black"/>
    <SolidColorBrush x:Key="DisabledForeground" Color="#888888"/>

    <LinearGradientBrush x:Key="MouseOverListBoxItemBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFFFFB"/>
        <GradientStop Offset="0.5" Color="#FFEBAB"/>
        <GradientStop Offset="0.5" Color="#FFD669"/>
        <GradientStop Offset="1" Color="#FFE59A"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SelectedListBoxItemBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFD9AA"/>
        <GradientStop Offset="0.5" Color="#FFBB6E"/>
        <GradientStop Offset="0.5" Color="#FFAB3F"/>
        <GradientStop Offset="1" Color="#FEE17A"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MouseOverListBoxItemBorder" Color="#DBCE99"/>
    <SolidColorBrush x:Key="SelectedListBoxItemBorder" Color="#DBCE99"/>

    <Style x:Key="SingleSelectItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource Foreground}"/>
        <Setter Property="Control.Padding" Value="2"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Border" SnapsToDevicePixels="true" Padding="{TemplateBinding Control.Padding}"
                  CornerRadius="2" BorderThickness="1" BorderBrush="Transparent">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource MouseOverListBoxItemBackground}"
                      Property="Border.Background"/>
                            <Setter TargetName="Border" Value="{StaticResource MouseOverListBoxItemBorder}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="ListBoxItem.IsSelected" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource SelectedListBoxItemBackground}"
                      Property="Border.Background"/>
                            <Setter TargetName="Border" Value="{StaticResource SelectedListBoxItemBorder}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Value="{StaticResource DisabledForeground}" Property="Control.Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Local:SingleSelect}">
        <!--<Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="IsTabStop" Value="False" />
            </Trigger>
        </Style.Triggers>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Local:SingleSelect}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="Gray"
                            BorderThickness="1" MinHeight="22">
                        
                        <Grid>
                            <Grid>
                                <TextBox 
                                    x:Name="PART_TextBox" 
                                    IsReadOnly="{Binding ElementName=PART_Popup, Path=IsOpen, Converter={StaticResource ReverseBoolConverter}}" 
                                    VerticalContentAlignment="Center" 
                                    HorizontalContentAlignment="Left" 
                                    BorderThickness="0" 
                                    Padding="1,1,30,1" />
                                
                                <Grid x:Name="PART_Arrow" Margin="10,3,3,3" HorizontalAlignment="Right" Background="Transparent">
                                    <Path 
                                      x:Name="Arrow"
                                      Fill="{StaticResource GlyphBrush}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                      Visibility="{Binding ElementName=PART_TextBox, Path=IsReadOnly, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                      IsHitTestVisible="False" />
                                </Grid>
                            </Grid>
                            
                            <Popup 
                                x:Name="PART_Popup" 
                                PlacementTarget="{Binding ElementName=PART_TextBox}" 
                                Placement="Bottom">
                                
                                <ListBox 
                                    x:Name="PART_ListBox" 
                                    MaxHeight="405" 
                                    Width="{Binding ElementName=PART_TextBox, Path=ActualWidth}"
                                    DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                    SelectedValuePath="{TemplateBinding SelectedValuePath}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Local:SingleSelectTextBlock Text="{Binding}" IsVoided="{Binding IsVoided}">
                                                <Local:SingleSelectTextBlock.Style>
                                                    <Style TargetType="{x:Type Local:SingleSelectTextBlock}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsVoided" Value="true">
                                                                <Setter Property="Foreground" Value="SlateGray" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Local:SingleSelectTextBlock.Style>
                                            </Local:SingleSelectTextBlock>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemContainerStyle><!-- http://stackoverflow.com/questions/4697380/wpf-hiding-listbox-items -->
                                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource SingleSelectItem}">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsVoided}" Value="true" />
                                                        <Condition Binding="{Binding Path=ShowVoided, RelativeSource={RelativeSource AncestorType=Local:SingleSelect}}" Value="false" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsValueChanged" Value="true">
                            <!-- Here we know the PART_TextBox. Not before! -->
                            <Setter TargetName="PART_TextBox" Property="Background" Value="{StaticResource ChangedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsValueChanged" Value="false">
                            <!-- Empty trigger returns original values/background. -->
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>